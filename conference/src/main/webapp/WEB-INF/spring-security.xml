<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:jdbc="http://www.springframework.org/schema/jdbc"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <http auto-config="true">
        <intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <intercept-url pattern="/conference/*" access="ROLE_USER"/>
        <form-login login-page="/login" default-target-url="/conference/list"
                    authentication-failure-url="/loginfailed" />
        <logout logout-success-url="/logout" />
    </http>

    <!--<authentication-manager>-->
        <!--<authentication-provider>-->
            <!--<user-service>-->
                <!--<user name="sa" password="sa" authorities="ROLE_USER" />-->
            <!--</user-service>-->
        <!--</authentication-provider>-->
    <!--</authentication-manager>-->
    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
              users-by-username-query="select username,password, 'true' as enabled from Users where username=?"
              authorities-by-username-query=" select u.username, ur.authority from Users u, user_roles ur where u.id = ur.user_id and u.username =?"
                    />
        </authentication-provider>
    </authentication-manager>

</beans:beans>